// O schema foi divido da seguinte maneira:
// modelo-principal.prisma: Domínios de sistema, usuários, permissões, API, etc.
// modelo-etapas-iniciais.prisma: Prospecção, Cadastro e Vistoria
// modelo-etapas-finais.prisma: Notificação, Averbação, Logística, Monitoramento PEUC, Monitoramento IPTU 
// lista-etapas-iniciais.prisma: Enumeradores de etapas iniciais
// lista-etapas-finais.prisma: Enumeradores de etapas finais

model Processo {
    id                  Int                  @id @default(autoincrement())
    // imovelId            Int?
    // vistoriaId          Int?
    autuacaoSei         Int?                 @unique ///Nr processo SEI. Único, mas nem sempre preenchido.
    autuacaoData        DateTime?
    imovelContiguidade  Boolean              @default(false)
    estado              String?              @db.VarChar(20)
    areaConstruidaTotal Decimal?
    areaLoteTotal       Decimal?
    prospeccaoOrigem    ProspeccaoOrigem?
    prospeccaoTipologia ProspeccaoTipologia?
    prospeccaoData      DateTime?
    usuarioId           String
    criadoEm            DateTime             @default(now())
    atualizadoEm        DateTime             @updatedAt
    arquivado           Boolean              @default(false)

    // ProcessoVistoria Vistoria[]
    ProcessoImovel Imovel[]
    // Vistoria       Vistoria? @relation(fields: [vistoriaId], references: [id])

    @@map("processos")
}

model Vistoria {
    id                            Int            @id @default(autoincrement())
    processoId                    Int? ///autuacaoSei. Chave humana.
    imovelId                      Int? ///SQL. Chave humana.
    tipoVistoria                  TipoVistoria?
    tipoTipologia                 TipoTipologia?
    tipoUso                       TipoUso?
    qtdePavimentos                Int?
    unifamiliar                   Boolean        @default(false)
    multifamiliar                 Boolean        @default(false)
    comercio                      Boolean        @default(false)
    servico                       Boolean        @default(false)
    industria                     Boolean        @default(false)
    usoFachadaBoaCondicao         Boolean        @default(false)
    usoEsquadriaBoaCondicao       Boolean        @default(false)
    usoPodaVegetacao              Boolean        @default(false)
    areaConstruidaTotalConstatada Decimal?
    areaLoteTotalConstatada       Decimal?
    indiceOcupacaoConstatado      Decimal?
    areaCoberturaTotalConstatada  Decimal?
    areaConstruidaNaoComputavel   Decimal?
    descricao                     String?        @db.Text
    dataVistoria                  DateTime?
    usuarioId                     String
    criadoEm                      DateTime       @default(now())
    atualizadoEm                  DateTime       @updatedAt
    deletado                      Boolean        @default(false)

    vistoriaImovel   Imovel? @relation(fields: [vistoriaImovelId], references: [id], onDelete: Cascade)
    vistoriaImovelId Int?

    @@map("vistorias")
}

model Prospeccao {
    id Int @id @default(autoincrement())

    @@map("prospeccoes")
}

model Imovel {
    id                                  Int                         @id @default(autoincrement())
    // matriculaId                         Int                                    @unique
    // vistoriaId                          Int                                    @unique
    seiId                               Int? ///autuacaoSei. Chave humana.
    sqlId                               Int? ///SQL. Chave humana.
    sqlSetor                            Int?
    sqlQuadra                           Int?
    sqlLote                             Int?
    sqlDigito                           Int?
    sqlPai                              Int?
    sqlFilho                            Int?
    registroNotasReferencia             String?                     @db.VarChar(128)
    enderecoLogradouro                  String?                     @db.VarChar(256)
    enderecoNumero                      String?                     @db.VarChar(7)
    enderecoComplemento                 String?                     @db.VarChar(64)
    enderecoReferencia                  String?                     @db.VarChar(256)
    enderecoDistrito                    EnderecoDistrito?
    enderecoCep                         String?                     @db.VarChar(7)
    enderecoSubprefeitura               EnderecoSubprefeitura?
    enderecoSubprefeituraSigla          EnderecoSubprefeituraSigla?
    enderecoMacroarea                   EnderecoMacroarea?
    enderecoMacroareaSigla              EnderecoMacroAreaSigla?
    enderecoZona                        EnderecoZona?
    enderecoZonaSigla                   EnderecoZonaSigla?
    areaConstruidaTotalRegistrada       Decimal?
    areaLoteTotalRegistrada             Decimal?
    areaCoeficienteAproveitamento       Decimal?
    areaCoeficienteAproveitamentoMinimo Decimal?
    // geoLatLong                          Unsupported("geography(Point, 4326)")?
    geoEpsg                             Int?                        @default(4326)
    decretoNumero                       String?
    decretoTipo                         String?
    tombamentoCompresp                  String?
    tombamentoCondephat                 String?
    tombamentoIphan                     String?
    usuarioId                           String
    criadoEm                            DateTime                    @default(now())
    atualizadoEm                        DateTime                    @updatedAt
    deletado                            Boolean                     @default(false)

    imovelProcesso   Processo?  @relation(fields: [imovelProcessoId], references: [id], onDelete: Cascade)
    imovelProcessoId Int?
    ImovelVistoria   Vistoria[]
    // Vistoria         Vistoria?
    // Matricula        Matricula?

    @@map("imoveis")
}
